name: CI-CD (Local K8s)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  IMAGE_NAME: demo-devops-java
  REGISTRY: docker.io/${{ secrets.DOCKER_USERNAME }}
  IMAGE_TAG: ${{ github.sha }}

jobs:
  # ---------- 1) Build & Test ----------
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: 'maven'

      - name: Build & Unit Tests (skip checkstyle)
        run: mvn -B -q clean verify -Dcheckstyle.skip=true

      - name: Upload test & coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: junit-and-jacoco
          path: |
            target/surefire-reports
            target/site/jacoco

  # ---------- 2) Docker Build & Push ----------
  docker:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

  # ---------- 3) Deploy to local Kubernetes (Minikube / Docker Desktop) ----------
  deploy:
    needs: docker
    runs-on: self-hosted
    # si al configurar tu runner añadiste labels como "k8s", filtra así:
    # runs-on: [self-hosted, k8s]
    env:
      REGISTRY: docker.io/${{ secrets.DOCKER_USERNAME }}
      IMAGE_NAME: demo-devops-java
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - uses: actions/checkout@v4

      - name: Show kubectl context (debug)
        run: |
          kubectl config current-context
          kubectl get nodes

      - name: Ensure namespace & ingress addon (idempotent)
        run: |
          kubectl get ns demo || kubectl create ns demo
          # Si usas Minikube y NO habilitaste ingress via addon, comenta la línea de abajo.
          # minikube addons enable ingress || true

      - name: Render image into deployment
        run: |
          sed -i.bak "s#<TU_REGISTRO>/demo-devops-java:${IMAGE_TAG}#${REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG}#g" k8s/deployment.yaml
      

      - name: Apply manifests
        run: |
          kubectl -n demo apply -f k8s/configmap.yaml
          kubectl -n demo apply -f k8s/secret.yaml
          kubectl -n demo apply -f k8s/service.yaml
          kubectl -n demo apply -f k8s/deployment.yaml
          kubectl -n demo apply -f k8s/ingress.yaml
      
      - name: Set image on deployment
        run: |
          kubectl -n demo set image deployment/demo-app app=${REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG}

      - name: Wait for rollout
        run: kubectl -n demo rollout status deploy/demo-app --timeout=180s

      - name: Show resources
        run: kubectl -n demo get all
