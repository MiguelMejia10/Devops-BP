trigger:
  - main

pool:
  vmImage: ubuntu-latest

# ⬇️ Ajusta estas 2 variables:
variables:
  kubernetesServiceConnection: 'MyAKS'  # <-- pon aquí el nombre de tu Service Connection
  kubernetesNamespace: 'demo'
  imageRef: 'docker.io/<miguelmejia10>/demo-devops-java:latest'  # <-- o usa un tag por commit

  manifests: |
    k8s/namespace.yaml
    k8s/configmap.yaml
    k8s/secret.yaml
    k8s/service.yaml
    k8s/deployment.yaml
    k8s/ingress.yaml

steps:
- checkout: self

# 🚀 Despliegue a AKS usando los manifiestos de tu repo
- task: KubernetesManifest@1
  displayName: 'Deploy manifests'
  inputs:
    action: 'deploy'
    kubernetesServiceConnection: '$(kubernetesServiceConnection)'
    namespace: '$(kubernetesNamespace)'
    manifests: '$(manifests)'
    # Sobrescribe la imagen del Deployment con la recién publicada en Docker Hub
    containers: |
      $(imageRef)

# 👀 Esperar al rollout y mostrar estado
- task: Kubectl@1
  displayName: 'Rollout status'
  inputs:
    kubernetesServiceConnection: '$(kubernetesServiceConnection)'
    namespace: '$(kubernetesNamespace)'
    command: 'rollout'
    arguments: 'status deploy/demo-app --timeout=120s'

- task: Kubectl@1
  displayName: 'Get resources'
  inputs:
    kubernetesServiceConnection: '$(kubernetesServiceConnection)'
    namespace: '$(kubernetesNamespace)'
    command: 'get'
    arguments: 'all'